pipeline {
  agent {
    docker {
      image 'node:16' // Replace with the desired Node.js version
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket to access the host's Docker daemon
    }
  }
  environment {
    SLACK_CREDENTIALS = credentials('slack-credentials') // Slack webhook credentials ID
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        // git branch: 'main', url: 'https://github.com/kiran877/cicd_project.git'
      }
    }
    stage('Install Dependencies') {
      steps {
        sh 'ls -ltr'
        // Install project dependencies
        sh 'cd nodejs-app && npm install'
      }
    }
    stage('Run Tests') {
      steps {
        // Run tests
        sh 'cd nodejs-app && npm test'
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "saikiran078/nodejs-app:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh 'cd nodejs-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Better_assignment"
        GIT_USER_NAME = "kiran877"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
              git config user.email "kirangavvala078@gmail.com"
              git config user.name "kiran877"
              BUILD_NUMBER=${BUILD_NUMBER}
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" nodejs-app-manifests/deployment.yml
              git add nodejs-app-manifests/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
  post {
    success {
      script {
        slackSend channel: '#general', color: 'good', message: "Build SUCCESSFUL! Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'."
      }
    }
    failure {
      script {
        slackSend channel: '#general', color: 'danger', message: "Build FAILED! Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'."
      }
    }
  }
}
